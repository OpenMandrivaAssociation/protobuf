--- protobuf-3.2.0/autogen.sh.orig	2017-01-28 00:03:40.000000000 +0100
+++ protobuf-3.2.0/autogen.sh	2017-03-20 16:27:40.342868805 +0100
@@ -29,18 +29,18 @@
 
 # Check that gmock is present.  Usually it is already there since the
 # directory is set up as an SVN external.
-if test ! -e gmock; then
-  echo "Google Mock not present.  Fetching gmock-1.7.0 from the web..."
-  curl $curlopts -L -O https://github.com/google/googlemock/archive/release-1.7.0.zip
-  unzip -q release-1.7.0.zip
-  rm release-1.7.0.zip
-  mv googlemock-release-1.7.0 gmock
-
-  curl $curlopts -L -O https://github.com/google/googletest/archive/release-1.7.0.zip
-  unzip -q release-1.7.0.zip
-  rm release-1.7.0.zip
-  mv googletest-release-1.7.0 gmock/gtest
-fi
+#if test ! -e gmock; then
+#  echo "Google Mock not present.  Fetching gmock-1.7.0 from the web..."
+#  curl $curlopts -L -O https://github.com/google/googlemock/archive/release-1.7.0.zip
+#  unzip -q release-1.7.0.zip
+#  rm release-1.7.0.zip
+#  mv googlemock-release-1.7.0 gmock
+#
+#  curl $curlopts -L -O https://github.com/google/googletest/archive/release-1.7.0.zip
+#  unzip -q release-1.7.0.zip
+#  rm release-1.7.0.zip
+#  mv googletest-release-1.7.0 gmock/gtest
+#fi
 
 set -ex
 
--- protobuf-3.2.0/Makefile.am.orig	2017-03-20 16:24:59.580406000 +0100
+++ protobuf-3.2.0/Makefile.am	2017-03-20 16:32:44.421221471 +0100
@@ -19,7 +19,7 @@
 check-local:
 	@echo "Making lib/libgmock.a lib/libgmock_main.a in gmock"
 	@cd gmock && $(MAKE) $(AM_MAKEFLAGS) lib/libgmock.la lib/libgmock_main.la
-	@cd gmock/gtest && $(MAKE) $(AM_MAKEFLAGS) lib/libgtest.la lib/libgtest_main.la
+#	@cd gmock/gtest && $(MAKE) $(AM_MAKEFLAGS) lib/libgtest.la lib/libgtest_main.la
 
 # We would like to clean gmock when "make clean" is invoked.  But we have to
 # be careful because clean-local is also invoked during "make distclean", but
--- protobuf-3.2.0/src/Makefile.am.orig	2017-03-20 16:24:59.590406000 +0100
+++ protobuf-3.2.0/src/Makefile.am	2017-03-20 16:32:33.914611723 +0100
@@ -717,12 +717,12 @@
 check_PROGRAMS = protoc protobuf-test protobuf-lazy-descriptor-test \
                  protobuf-lite-test test_plugin protobuf-lite-arena-test \
                  no-warning-test $(GZCHECKPROGRAMS)
-protobuf_test_LDADD = $(PTHREAD_LIBS) libprotobuf.la libprotoc.la \
-                      ../gmock/gtest/lib/libgtest.la              \
-                      ../gmock/lib/libgmock.la                    \
-                      ../gmock/lib/libgmock_main.la
-protobuf_test_CPPFLAGS = -I$(srcdir)/../gmock/gtest/include \
-                         -I$(srcdir)/../gmock/include
+protobuf_test_LDADD = $(PTHREAD_LIBS) libprotobuf.la libprotoc.la 
+#                      ../gmock/gtest/lib/libgtest.la              \
+#                      ../gmock/lib/libgmock.la                    \
+#                      ../gmock/lib/libgmock_main.la
+#protobuf_test_CPPFLAGS = -I$(srcdir)/../gmock/gtest/include \
+#                         -I$(srcdir)/../gmock/include
 # Disable optimization for tests unless the user explicitly asked for it,
 # since test_util.cc takes forever to compile with optimization (with GCC).
 # See configure.ac for more info.
@@ -804,13 +804,13 @@
 
 # Run cpp_unittest again with PROTOBUF_TEST_NO_DESCRIPTORS defined.
 protobuf_lazy_descriptor_test_LDADD = $(PTHREAD_LIBS) libprotobuf.la \
-                      libprotoc.la                                   \
-                      ../gmock/gtest/lib/libgtest.la                 \
-                      ../gmock/lib/libgmock.la                       \
-                      ../gmock/lib/libgmock_main.la
-protobuf_lazy_descriptor_test_CPPFLAGS = -I$(srcdir)/../gmock/include       \
-                                         -I$(srcdir)/../gmock/gtest/include \
-                                         -DPROTOBUF_TEST_NO_DESCRIPTORS
+                      libprotoc.la                                   
+#                      ../gmock/gtest/lib/libgtest.la                 \
+#                      ../gmock/lib/libgmock.la                       \
+#                      ../gmock/lib/libgmock_main.la
+#protobuf_lazy_descriptor_test_CPPFLAGS = -I$(srcdir)/../gmock/include       \
+#                                         -I$(srcdir)/../gmock/gtest/include \
+#                                         -DPROTOBUF_TEST_NO_DESCRIPTORS
 protobuf_lazy_descriptor_test_CXXFLAGS = $(NO_OPT_CXXFLAGS)
 protobuf_lazy_descriptor_test_SOURCES =                        \
   google/protobuf/compiler/cpp/cpp_unittest.cc                 \
@@ -839,12 +839,12 @@
 # lite_arena_unittest depends on gtest because teboring@ found that without
 # gtest when building the test internally our memory sanitizer doesn't detect
 # memory leaks (don't know why).
-protobuf_lite_arena_test_LDADD = $(PTHREAD_LIBS) libprotobuf-lite.la \
-                      ../gmock/gtest/lib/libgtest.la                 \
-                      ../gmock/lib/libgmock.la                       \
-                      ../gmock/lib/libgmock_main.la
-protobuf_lite_arena_test_CPPFLAGS = -I$(srcdir)/../gmock/include       \
-                                    -I$(srcdir)/../gmock/gtest/include
+protobuf_lite_arena_test_LDADD = $(PTHREAD_LIBS) libprotobuf-lite.la 
+#                      ../gmock/gtest/lib/libgtest.la                 \
+#                      ../gmock/lib/libgmock.la                       \
+#                      ../gmock/lib/libgmock_main.la
+#protobuf_lite_arena_test_CPPFLAGS = -I$(srcdir)/../gmock/include       \
+#                                    -I$(srcdir)/../gmock/gtest/include
 protobuf_lite_arena_test_CXXFLAGS = $(NO_OPT_CXXFLAGS)
 protobuf_lite_arena_test_SOURCES =       \
   google/protobuf/lite_arena_unittest.cc \
@@ -852,9 +852,9 @@
 nodist_protobuf_lite_arena_test_SOURCES = $(protoc_lite_outputs)
 
 # Test plugin binary.
-test_plugin_LDADD = $(PTHREAD_LIBS) libprotobuf.la libprotoc.la \
-                    ../gmock/gtest/lib/libgtest.la
-test_plugin_CPPFLAGS = -I$(srcdir)/../gmock/gtest/include
+test_plugin_LDADD = $(PTHREAD_LIBS) libprotobuf.la libprotoc.la 
+#                    ../gmock/gtest/lib/libgtest.la
+#test_plugin_CPPFLAGS = -I$(srcdir)/../gmock/gtest/include
 test_plugin_SOURCES =                                          \
   google/protobuf/compiler/mock_code_generator.cc              \
   google/protobuf/testing/file.cc                              \
@@ -879,13 +879,13 @@
 	    echo "#include <$${FILE}>" >> no_warning_test.cc; \
 	  fi \
 	done
-	echo "#include <gtest/gtest.h>" >> no_warning_test.cc
-	echo "TEST(NoWarningTest, Empty) {}" >> no_warning_test.cc
+#	echo "#include <gtest/gtest.h>" >> no_warning_test.cc
+#	echo "TEST(NoWarningTest, Empty) {}" >> no_warning_test.cc
 
-no_warning_test_LDADD = $(PTHREAD_LIBS) libprotobuf.la      \
-                        ../gmock/gtest/lib/libgtest.la      \
-                        ../gmock/gtest/lib/libgtest_main.la
-no_warning_test_CPPFLAGS = -I$(srcdir)/../gmock/gtest/include
+no_warning_test_LDADD = $(PTHREAD_LIBS) libprotobuf.la      
+#                        ../gmock/gtest/lib/libgtest.la      \
+#                        ../gmock/gtest/lib/libgtest_main.la
+#no_warning_test_CPPFLAGS = -I$(srcdir)/../gmock/gtest/include
 no_warning_test_CXXFLAGS = $(PTHREAD_CFLAGS) $(PTHREAD_DEF) $(ZLIB_DEF) \
                            -Wall -Werror
 nodist_no_warning_test_SOURCES = no_warning_test.cc $(protoc_outputs)
